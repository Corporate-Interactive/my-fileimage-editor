import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["children", "size"];
import React, { useContext } from 'react';
import { intrinsicComponent } from '../../utils/functions';
import Styled from './drawer.styles';
import DrawerContext from './drawer.context';
var DrawerItemIcon = intrinsicComponent(function (_ref, ref) {
  var children = _ref.children,
    _ref$size = _ref.size,
    iconSize = _ref$size === void 0 ? 20 : _ref$size,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useContext = useContext(DrawerContext),
    isCollapsed = _useContext.isCollapsed,
    size = _useContext.size;
  return /*#__PURE__*/React.createElement(Styled.Icon, _extends({}, rest, {
    isCollapsed: isCollapsed,
    ref: ref
  }), children && typeof children === 'function' ? children({
    size: size || iconSize
  }) : children);
});
export default DrawerItemIcon;