import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["anchorEl", "children", "open", "warning", "position", "arrow", "popperOptions", "overlay", "zIndex", "enableUnderlayingEvent", "wrapperStyles", "disablePortal", "onClick"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import React, { useRef, useEffect } from 'react';
import { createPortal } from 'react-dom';
import { createPopper } from '@popperjs/core';
import usePortal from '../../hooks/use-portal';
import { intrinsicComponent, generateClassNames, useForkRef } from '../../utils/functions';
import { Position } from './types';
import Styled from './popper.styles';
import { passEventToUnderLayingEvent } from './popper.utils';
var Popper = intrinsicComponent(function (_ref, ref) {
  var anchorEl = _ref.anchorEl,
    children = _ref.children,
    open = _ref.open,
    _ref$warning = _ref.warning,
    warning = _ref$warning === void 0 ? false : _ref$warning,
    _ref$position = _ref.position,
    initialPlacement = _ref$position === void 0 ? Position.Bottom : _ref$position,
    _ref$arrow = _ref.arrow,
    arrow = _ref$arrow === void 0 ? false : _ref$arrow,
    _ref$popperOptions = _ref.popperOptions,
    popperOptions = _ref$popperOptions === void 0 ? {} : _ref$popperOptions,
    _ref$overlay = _ref.overlay,
    overlay = _ref$overlay === void 0 ? false : _ref$overlay,
    _ref$zIndex = _ref.zIndex,
    zIndex = _ref$zIndex === void 0 ? 1300 : _ref$zIndex,
    _ref$enableUnderlayin = _ref.enableUnderlayingEvent,
    enableUnderlayingEvent = _ref$enableUnderlayin === void 0 ? false : _ref$enableUnderlayin,
    _ref$wrapperStyles = _ref.wrapperStyles,
    wrapperStyles = _ref$wrapperStyles === void 0 ? {} : _ref$wrapperStyles,
    _ref$disablePortal = _ref.disablePortal,
    disablePortal = _ref$disablePortal === void 0 ? false : _ref$disablePortal,
    onClick = _ref.onClick,
    rest = _objectWithoutProperties(_ref, _excluded);
  var target = usePortal(generateClassNames('Popper'));
  var popperRef = useRef(null);
  var handlePopperRef = useForkRef(popperRef, ref);
  useEffect(function () {
    if (!anchorEl || !open || popperRef.current === null) {
      return undefined;
    }
    var defaultModifiers = [{
      name: 'arrow',
      options: {
        element: '[data-popper-arrow]'
      }
    }, {
      name: 'offset',
      options: {
        offset: [0, 10]
      }
    }];
    var popperModifiers = arrow ? defaultModifiers : [];
    if (popperOptions && popperOptions.modifiers != null) {
      popperModifiers = popperModifiers.concat(popperOptions.modifiers);
    }
    var popper = createPopper(anchorEl, popperRef.current, _objectSpread(_objectSpread({
      placement: initialPlacement
    }, popperOptions), {}, {
      modifiers: popperModifiers
    }));
    handlePopperRef.current = popper;
    return function () {
      popper.destroy();
      handlePopperRef.current = null;
    };
  }, [anchorEl, open, popperOptions, initialPlacement, arrow]);
  var handleOnClicking = function handleOnClicking(event) {
    event.persist();
    event.preventDefault();
    event.stopPropagation();
    if (onClick) {
      onClick(event);
    }
    if (enableUnderlayingEvent) {
      passEventToUnderLayingEvent(event);
    }
  };
  var renderOverlay = function renderOverlay() {
    return /*#__PURE__*/React.createElement(Styled.Overlay, {
      onClick: handleOnClicking,
      onContextMenu: handleOnClicking
    });
  };
  var render = function render() {
    var _handlePopperRef$stat;
    return /*#__PURE__*/React.createElement(Styled.PopperWrapper, {
      $zIndex: zIndex,
      style: _objectSpread({}, wrapperStyles)
    }, overlay && open && renderOverlay(), /*#__PURE__*/React.createElement(Styled.Popper, _extends({
      ref: handlePopperRef,
      open: open
    }, rest), children, arrow && /*#__PURE__*/React.createElement(Styled.Arrow, {
      warning: warning,
      "data-popper-arrow": true,
      position: (handlePopperRef === null || handlePopperRef === void 0 || (_handlePopperRef$stat = handlePopperRef.state) === null || _handlePopperRef$stat === void 0 ? void 0 : _handlePopperRef$stat.placement) || initialPlacement
    })));
  };
  return disablePortal ? render() : /*#__PURE__*/createPortal(render(), target);
});
export default Popper;