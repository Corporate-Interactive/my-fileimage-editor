import { applyDisplayNames, generateClassNames } from '../../utils/functions';
import Tippy from '@tippyjs/react';
import styled, { css } from 'styled-components';
import { BorderRadiusSize as BRSize } from '../../utils/types/shape/border-radius-size';
import { fontTooltipMixin, sizeTooltipMixin } from '../tooltip/tooltip.mixin';
import { Size } from './types';
import { variantMixin } from './tooltip-v2.mixin';
var baseClassName = 'TooltipV2';
var TooltipV2 = /*#__PURE__*/styled(Tippy).attrs({
  className: generateClassNames(baseClassName, 'root')
}).withConfig({
  componentId: "sc-4j2dcr-0"
})(function (_ref) {
  var $variant = _ref.$variant,
    _ref$$size = _ref.$size,
    $size = _ref$$size === void 0 ? Size.Sm : _ref$$size,
    theme = _ref.theme;
  return css(["display:inline-flex;align-items:center;justify-content:center;min-width:54px;min-height:20px;word-break:break-word;border-radius:", ";", ";", ";.tippy-content{padding:0;", "}"], theme.shape.borderRadius[BRSize.Md], variantMixin[$variant], sizeTooltipMixin[$size], fontTooltipMixin[$size]);
});
var TooltipText = /*#__PURE__*/styled.div.attrs({
  className: generateClassNames(baseClassName, 'content')
}).withConfig({
  componentId: "sc-4j2dcr-1"
})(["display:flex;align-items:center;"]);
var Styled = applyDisplayNames({
  TooltipV2: TooltipV2,
  TooltipText: TooltipText
});
export default Styled;