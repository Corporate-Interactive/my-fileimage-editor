import _defineProperty from "@babel/runtime/helpers/defineProperty";
import { css } from 'styled-components';
import { Color as PColor } from '../../utils/types/palette';
import { Variant } from './types';
import Styled from './tooltip-v2.styles';
export var variantMixin = _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, Variant.Default, function (_ref) {
  var palette = _ref.theme.palette;
  return css(["background:", ";color:", ";", "{color:", ";}.tippy-arrow{color:", ";}"], palette[PColor.IconsPlaceholder], palette[PColor.LinkActive], Styled.TooltipText, palette[PColor.LinkActive], palette[PColor.IconsPlaceholder]);
}), Variant.Warning, function (_ref2) {
  var palette = _ref2.theme.palette;
  return css(["background:", ";color:", ";", "{color:", ";}.tippy-arrow{color:", ";}"], palette[PColor.BackgroundOrange], palette[PColor.TextWarning], Styled.TooltipText, palette[PColor.TextWarning], palette[PColor.BackgroundOrange]);
}), Variant.Info, function (_ref3) {
  var palette = _ref3.theme.palette;
  return css(["background:", ";color:", ";", "{color:", ";}.tippy-arrow{color:", ";}"], palette[PColor.BackgroundBlue], palette[PColor.TextInfo], Styled.TooltipText, palette[PColor.TextInfo], palette[PColor.BackgroundBlue]);
}), Variant.Error, function (_ref4) {
  var palette = _ref4.theme.palette;
  return css(["background:", ";color:", ";", "{color:", ";}.tippy-arrow{color:", ";}"], palette[PColor.BackgroundRedLight], palette[PColor.TextError], Styled.TooltipText, palette[PColor.TextError], palette[PColor.BackgroundRedLight]);
});