import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["size", "label", "radioProps", "readOnly", "disabled", "radioStyles", "labelStyles", "onChange", "checked"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import React from 'react';
import { intrinsicComponent } from '../../utils/functions';
import Radio, { RadioSize } from '../radio';
import Styled from './radio-group.styles';
var RadioGroup = intrinsicComponent(function (_ref, ref) {
  var _ref$size = _ref.size,
    size = _ref$size === void 0 ? RadioSize.Sm : _ref$size,
    label = _ref.label,
    radioProps = _ref.radioProps,
    readOnly = _ref.readOnly,
    disabled = _ref.disabled,
    radioStyles = _ref.radioStyles,
    labelStyles = _ref.labelStyles,
    onChange = _ref.onChange,
    _ref$checked = _ref.checked,
    checked = _ref$checked === void 0 ? false : _ref$checked,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(Styled.RadioGroup, _extends({
    disabled: disabled,
    ref: ref
  }, rest), /*#__PURE__*/React.createElement(Radio, {
    radioProps: radioProps,
    readOnly: readOnly,
    disabled: disabled,
    checked: checked,
    onChange: onChange,
    size: size,
    style: _objectSpread({}, radioStyles)
  }), /*#__PURE__*/React.createElement(Styled.Label, {
    disabled: disabled,
    size: size,
    style: _objectSpread({}, labelStyles)
  }, label));
});
export default RadioGroup;