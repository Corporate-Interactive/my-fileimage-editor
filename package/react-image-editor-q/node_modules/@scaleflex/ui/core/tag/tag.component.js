import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["children", "type", "crossIcon", "startIcon", "size", "tagIndex", "onRemove", "contentEditable", "suppressContentEditableWarning"];
import React from 'react';
import CrossIcon from '@scaleflex/icons/cross';
import { intrinsicComponent } from '../../utils/functions';
import { Size, Type } from './types';
import Styled from './tag.styles';
var Tag = intrinsicComponent(function (_ref, ref) {
  var children = _ref.children,
    _ref$type = _ref.type,
    type = _ref$type === void 0 ? Type.Default : _ref$type,
    _ref$crossIcon = _ref.crossIcon,
    crossIcon = _ref$crossIcon === void 0 ? true : _ref$crossIcon,
    startIcon = _ref.startIcon,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? Size.Md : _ref$size,
    tagIndex = _ref.tagIndex,
    onRemove = _ref.onRemove,
    contentEditable = _ref.contentEditable,
    suppressContentEditableWarning = _ref.suppressContentEditableWarning,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(Styled.Tag, _extends({
    ref: ref,
    size: size,
    type: type
  }, rest, {
    onClick: type === Type.Suggested ? function (event) {
      if (typeof rest.onSelect === 'function') {
        rest.onSelect(event);
      }
      if (typeof rest.onClick === 'function') {
        rest.onClick(event);
      }
    } : rest.onClick
  }), startIcon && /*#__PURE__*/React.createElement(Styled.StartIcon, null, startIcon), /*#__PURE__*/React.createElement(Styled.Label, {
    contentEditable: contentEditable,
    suppressContentEditableWarning: suppressContentEditableWarning
  }, children), crossIcon && /*#__PURE__*/React.createElement(Styled.Cross, null, /*#__PURE__*/React.createElement(CrossIcon, {
    size: 8,
    onClick: function onClick(event) {
      if (typeof onRemove === 'function') {
        onRemove(tagIndex, event);
      }
    }
  })));
});
export default Tag;