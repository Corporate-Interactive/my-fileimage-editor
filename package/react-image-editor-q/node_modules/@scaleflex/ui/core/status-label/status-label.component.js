import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["label", "variant", "type", "size", "iconSize"];
import React from 'react';
import { intrinsicComponent } from '../../utils/functions';
import { Size, Type, Variant } from './types';
import Styled from './status-label.styles';
var StatusLabel = intrinsicComponent(function (_ref, ref) {
  var _ref$label = _ref.label,
    label = _ref$label === void 0 ? '' : _ref$label,
    _ref$variant = _ref.variant,
    variant = _ref$variant === void 0 ? Variant.Filled : _ref$variant,
    _ref$type = _ref.type,
    type = _ref$type === void 0 ? Type.Default : _ref$type,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? Size.Md : _ref$size,
    _ref$iconSize = _ref.iconSize,
    iconSize = _ref$iconSize === void 0 ? 8 : _ref$iconSize,
    rest = _objectWithoutProperties(_ref, _excluded);
  var showStatusIcon = Boolean(type !== Type.Default && type !== Type.Inactive);
  return /*#__PURE__*/React.createElement(Styled.StatusLabelWrapper, _extends({
    ref: ref,
    size: size,
    label: label,
    type: type,
    variant: variant
  }, rest), showStatusIcon && /*#__PURE__*/React.createElement(Styled.StatusIcon, {
    type: type,
    iconSize: iconSize
  }), /*#__PURE__*/React.createElement(Styled.StatusLabel, null, label));
});
export default StatusLabel;