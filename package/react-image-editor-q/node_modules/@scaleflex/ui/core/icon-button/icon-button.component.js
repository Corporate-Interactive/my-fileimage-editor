import _extends from "@babel/runtime/helpers/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["children", "size", "color", "active"];
import React from 'react';
import { intrinsicComponent } from '../../utils/functions';
import { getIconSize } from '../button/button.utils';
import { ButtonSize, IconButtonColor } from '../../utils/types';
import Styled from './icon-button.styles';
var IconButton = intrinsicComponent(function (_ref, ref) {
  var children = _ref.children,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? ButtonSize.Md : _ref$size,
    _ref$color = _ref.color,
    color = _ref$color === void 0 ? IconButtonColor.Primary : _ref$color,
    _ref$active = _ref.active,
    active = _ref$active === void 0 ? false : _ref$active,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(Styled.IconButton, _extends({
    type: "button"
  }, rest, {
    size: size,
    color: color,
    $active: active,
    ref: ref
  }), children && (typeof children === 'function' ? children({
    size: getIconSize(size)
  }) : children));
});
export default IconButton;