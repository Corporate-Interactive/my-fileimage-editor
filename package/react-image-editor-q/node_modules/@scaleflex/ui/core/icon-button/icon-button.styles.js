import styled, { css } from 'styled-components';
import { generateClassNames, applyDisplayNames } from '../../utils/functions';
import ButtonStyled from '../button/button.styles';
import { colorButtonMixin, squarePaddingMixin } from './icon-button.mixin';
import { ButtonSize, IconButtonColor } from '../../utils/types';
var baseClassName = 'IconButton';
var IconButton = /*#__PURE__*/styled(ButtonStyled.Button).attrs({
  className: generateClassNames(baseClassName, 'root')
}).withConfig({
  componentId: "sc-10edh45-0"
})(function (_ref) {
  var theme = _ref.theme,
    _ref$color = _ref.color,
    color = _ref$color === void 0 ? IconButtonColor.Secondary : _ref$color,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? ButtonSize.Md : _ref$size,
    _ref$$active = _ref.$active,
    $active = _ref$$active === void 0 ? false : _ref$$active;
  return css(["", " ", ""], squarePaddingMixin[size], colorButtonMixin[color] ? colorButtonMixin[color]({
    theme: theme,
    active: $active
  }) : colorButtonMixin[IconButtonColor.Basic]({
    theme: theme,
    active: $active
  }));
});
var Styled = applyDisplayNames({
  IconButton: IconButton
});
export default Styled;