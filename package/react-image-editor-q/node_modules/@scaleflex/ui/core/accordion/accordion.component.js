import _extends from "@babel/runtime/helpers/extends";
import _defineProperty from "@babel/runtime/helpers/defineProperty";
import _objectWithoutProperties from "@babel/runtime/helpers/objectWithoutProperties";
var _excluded = ["label", "expanded", "children", "detailStyle", "headerStyle", "fullWidth", "iconProps", "onClick", "onChange", "onContextMenu", "hideIcon"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
import React from 'react';
import { intrinsicComponent } from '../../utils/functions';
import AccordionHeader from '../accordion-header';
import AccordionDetails from '../accordion-details';
import Styled from './accordion.styles';
var Accordion = intrinsicComponent(function (_ref, ref) {
  var label = _ref.label,
    _ref$expanded = _ref.expanded,
    expanded = _ref$expanded === void 0 ? false : _ref$expanded,
    children = _ref.children,
    detailStyle = _ref.detailStyle,
    headerStyle = _ref.headerStyle,
    fullWidth = _ref.fullWidth,
    iconPropsData = _ref.iconProps,
    onClick = _ref.onClick,
    onChange = _ref.onChange,
    onContextMenu = _ref.onContextMenu,
    _ref$hideIcon = _ref.hideIcon,
    hideIcon = _ref$hideIcon === void 0 ? false : _ref$hideIcon,
    rest = _objectWithoutProperties(_ref, _excluded);
  var handleOnClick = function handleOnClick(event) {
    if (typeof onChange === 'function') {
      onChange(!expanded, event);
    }
    if (typeof onClick === 'function') {
      onClick(event);
    }
  };
  return /*#__PURE__*/React.createElement(Styled.Accordion, _extends({
    ref: ref
  }, rest), /*#__PURE__*/React.createElement(AccordionHeader, {
    label: label,
    expanded: expanded,
    style: _objectSpread({}, headerStyle),
    hideIcon: hideIcon,
    onClick: handleOnClick,
    onContextMenu: onContextMenu,
    iconProps: iconPropsData,
    fullWidth: fullWidth
  }), /*#__PURE__*/React.createElement(AccordionDetails, {
    expanded: expanded,
    style: _objectSpread({}, detailStyle)
  }, children));
});
export default Accordion;