import type { With } from '../../utils/types';
import type { WithTheme } from '../../theme/entity';
import type { ButtonProps } from './button.props';
export declare const colorButtonMixin: {
    primary: ({ theme: { palette }, active }: With<WithTheme, ButtonProps>) => import("styled-components").RuleSet<object>;
    secondary: ({ theme: { palette }, active }: With<WithTheme, ButtonProps>) => import("styled-components").RuleSet<object>;
    basic: ({ theme: { palette }, active }: With<WithTheme, ButtonProps>) => import("styled-components").RuleSet<object>;
    "link-primary": ({ theme: { palette }, active }: With<WithTheme, ButtonProps>) => import("styled-components").RuleSet<object>;
    "link-secondary": ({ theme: { palette }, active }: With<WithTheme, ButtonProps>) => import("styled-components").RuleSet<object>;
    "link-basic-primary": ({ theme: { palette }, active }: With<WithTheme, ButtonProps>) => import("styled-components").RuleSet<object>;
    "link-basic-secondary": ({ theme: { palette }, active }: With<WithTheme, ButtonProps>) => import("styled-components").RuleSet<object>;
    "error-primary": ({ theme: { palette }, active }: With<WithTheme, ButtonProps>) => import("styled-components").RuleSet<object>;
    "error-secondary": ({ theme: { palette }, active }: With<WithTheme, ButtonProps>) => import("styled-components").RuleSet<object>;
    "error-basic": ({ theme: { palette }, active }: With<WithTheme, ButtonProps>) => import("styled-components").RuleSet<object>;
    "warning-primary": ({ theme: { palette }, active }: With<WithTheme, ButtonProps>) => import("styled-components").RuleSet<object>;
    "warning-secondary": ({ theme: { palette }, active }: With<WithTheme, ButtonProps>) => import("styled-components").RuleSet<object>;
    "warning-basic": ({ theme: { palette }, active }: With<WithTheme, ButtonProps>) => import("styled-components").RuleSet<object>;
};
export declare const sizeButtonMixin: {
    xs: import("styled-components").RuleSet<object>;
    sm: import("styled-components").RuleSet<object>;
    md: import("styled-components").RuleSet<object>;
    lg: import("styled-components").RuleSet<object>;
};
export declare const sizeSecondaryButtonMixin: {
    xs: import("styled-components").RuleSet<object>;
    sm: import("styled-components").RuleSet<object>;
    md: import("styled-components").RuleSet<object>;
    lg: import("styled-components").RuleSet<object>;
};
export declare const sizeSidebarMixin: {
    xs: import("styled-components").RuleSet<object>;
    sm: import("styled-components").RuleSet<object>;
    md: import("styled-components").RuleSet<object>;
    lg: import("styled-components").RuleSet<object>;
};
export declare const sizeSidebarDividerMixin: {
    xs: import("styled-components").RuleSet<object>;
    sm: import("styled-components").RuleSet<object>;
    md: import("styled-components").RuleSet<object>;
    lg: import("styled-components").RuleSet<object>;
};
export declare const paddingIconLabelMixin: {
    xs: import("styled-components").RuleSet<object>;
    sm: import("styled-components").RuleSet<object>;
    md: import("styled-components").RuleSet<object>;
    lg: import("styled-components").RuleSet<object>;
};
export declare const sizeButtonLabelMixin: {
    xs: ({ theme: { typography: { font }, }, }: WithTheme) => import("styled-components").RuleSet<object>;
    sm: ({ theme: { typography: { font }, }, }: WithTheme) => import("styled-components").RuleSet<object>;
    md: ({ theme: { typography: { font }, }, }: WithTheme) => import("styled-components").RuleSet<object>;
    lg: ({ theme: { typography: { font }, }, }: WithTheme) => import("styled-components").RuleSet<object>;
};
