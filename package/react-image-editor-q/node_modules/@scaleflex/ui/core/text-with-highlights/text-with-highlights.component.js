import React, { Fragment } from 'react';
import Styled from './text-with-highlights.styles';
import { findAllMatches } from './text-with-highlights.utils';
import { escapeRegExp, intrinsicComponent } from '../../utils/functions';
var TextWithHighlights = intrinsicComponent(function (_ref, ref) {
  var text = _ref.text,
    highlightText = _ref.highlightText,
    highlightBackgroundColor = _ref.highlightBackgroundColor;
  if (!text || !highlightText) {
    return /*#__PURE__*/React.createElement("span", null, text);
  }
  var regexp = new RegExp(escapeRegExp(highlightText), 'gi');
  var foundStrings = findAllMatches(text || '', regexp);
  if (foundStrings.length === 0) {
    return /*#__PURE__*/React.createElement("span", null, text);
  }
  var renderHighlightedText = function renderHighlightedText() {
    var latestIndex = 0;
    var highlightedText = foundStrings.map(function (foundString) {
      var preNotHighlightedText = text.substring(latestIndex, foundString.startIndex);
      latestIndex = foundString.endIndex;
      return /*#__PURE__*/React.createElement(Fragment, {
        key: "str".concat(foundString.startIndex, "-").concat(foundString.endIndex)
      }, preNotHighlightedText, /*#__PURE__*/React.createElement(Styled.TextWithHighlights, {
        highlightColor: highlightBackgroundColor
      }, text.substring(foundString.startIndex, foundString.endIndex)));
    });
    return highlightedText.concat( /*#__PURE__*/React.createElement("span", {
      key: text
    }, text.substring(latestIndex)));
  };
  return /*#__PURE__*/React.createElement("span", {
    ref: ref
  }, renderHighlightedText());
});
export default TextWithHighlights;